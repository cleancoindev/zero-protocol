var _a = require("ethers"), Contract = _a.Contract, Wallet = _a.Wallet, providers = _a.providers;
var BTCVaultJson = require("../../../deployments/matic/BTCVault.json");
var DummyVaultJson = require("../../../deployments/matic/DummyVault.json");
var StrategyRenVMJson = require("../../../deployments/matic/StrategyRenVM.json");
var SwapJson = require("../../../deployments/matic/Swap.json");
var TrivialUnderwriterJson = require("../../../deployments/matic/TrivialUnderwriter.json");
var UnwrapNativeJson = require("../../../deployments/matic/UnwrapNative.json");
var WrapNativeJson = require("../../../deployments/matic/WrapNative.json");
var ZeroControllerJson = require("../../../deployments/matic/ZeroController.json");
var ZeroCurveFactoryJson = require("../../../deployments/matic/ZeroCurveFactory.json");
var ZeroUniswapFactoryJson = require("../../../deployments/matic/ZeroUniswapFactory.json");
var url = "https://polygon-mainnet.g.alchemy.com/v2/8_zmSL_WeJCxMIWGNugMkRgphmOCftMm";
var provider = new providers.JsonRpcProvider(url);
var privateKey = process.env.WALLET;
var signer = new Wallet(privateKey, provider);
signer.provider.getGasPrice = require('ethers-polygongastracker').createGetGasPrice('rapid');
export var BTCVault = new Contract(BTCVaultJson.address, BTCVaultJson.abi, signer);
export var DummyVault = new Contract(DummyVaultJson.address, DummyVaultJson.abi, signer);
export var Swap = new Contract(SwapJson.address, SwapJson.abi, signer);
export var TrivialUnderwriter = new Contract(TrivialUnderwriterJson.address, TrivialUnderwriterJson.abi, signer);
export var UnwrapNative = new Contract(UnwrapNativeJson.address, UnwrapNativeJson.abi, signer);
export var WrapNative = new Contract(WrapNativeJson.address, WrapNativeJson.abi, signer);
export var ZeroController = new Contract(ZeroControllerJson.address, ZeroControllerJson.abi, signer);
export var ZeroCurveFactory = new Contract(ZeroCurveFactoryJson.address, ZeroCurveFactoryJson.abi, signer);
export var ZeroUniswapFactory = new Contract(ZeroUniswapFactoryJson.address, ZeroUniswapFactoryJson.abi, signer);
export var ZeroUnderwriterImpl = new Contract(TrivialUnderwriterJson.address, ZeroControllerJson.abi, signer);
